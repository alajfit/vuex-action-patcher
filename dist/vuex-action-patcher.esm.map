{"version":3,"sources":["utils/isPromise/index.js","utils/patchAction/index.js","utils/patchModule/index.js","utils/index.js","index.js"],"names":["isPromise","val","then","patchAction","store","type","handler","local","entry","_actions","length","pop","push","payload","cb","res","dispatch","commit","getters","state","rootGetters","rootState","apollo","$apollo","gql","$gql","Promise","resolve","_devtoolHook","catch","err","emit","patchModule","path","module","hot","namespace","_modules","getNamespace","context","forEachAction","action","key","forEachChild","child","concat","vuexActionPatcher","tools","root","console","log","prototype"],"mappings":";AAEC,aAFc,SAASA,EAAWC,GACxBA,OAAAA,GAA2B,mBAAbA,EAAIC,KAC5B,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA;;ACgCA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAlCD,IAAA,EAAA,EAAA,QAAA,aAkCC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAhCc,SAASC,GAAa,MACjCC,EADiC,KAEjCC,EAFiC,QAGjCC,EAHiC,MAIjCC,IAEMC,MAAAA,EAAQJ,EAAMK,SAASJ,KAAUD,EAAMK,SAASJ,GAAQ,IAE1DG,EAAME,OAAS,GAAGF,EAAMG,MAE5BH,EAAMI,KAAK,SAA+BC,EAASC,GAC3CC,IAAAA,EAAMT,EAAQ,CACdU,SAAUT,EAAMS,SAChBC,OAAQV,EAAMU,OACdC,QAASX,EAAMW,QACfC,MAAOZ,EAAMY,MACbC,YAAahB,EAAMc,QACnBG,UAAWjB,EAAMe,MACjBG,OAAQlB,EAAMmB,QACdC,IAAKpB,EAAMqB,MACZZ,EAASC,GAGRV,OADC,EAAUW,EAAAA,SAAAA,KAAMA,EAAMW,QAAQC,QAAQZ,IACvCX,EAAMwB,aACCb,EAAIc,MAAMC,IAEPA,MADN1B,EAAMwB,aAAaG,KAAK,aAAcD,GAChCA,IAGHf;;AClBlB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAbD,IAAA,EAAA,EAAA,QAAA,aAaC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAXc,SAASiB,GAAa,MACjC5B,EADiC,KAEjC6B,EAFiC,OAGjCC,EAHiC,IAIjCC,IAEMC,MAAAA,EAAYhC,EAAMiC,SAASC,aAAaL,GACxC1B,EAAQ2B,EAAOK,QAErBL,EAAOM,cAAc,CAACC,EAAQC,KAAQ,EAAYtC,EAAAA,SAAAA,EAAQgC,EAAYM,EAAMD,EAAQlC,IACpF2B,EAAOS,aAAa,CAACC,EAAOF,IAAQV,EAAY5B,EAAO6B,EAAKY,OAAOH,GAAME,EAAOT;;ACRrE,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAJf,IAAA,EAAA,EAAA,QAAA,gBACA,EAAA,EAAA,QAAA,kBACA,EAAA,EAAA,QAAA,kBAEe,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,IAAA,EAAA,CACXnC,UAAAA,EADW,QAEXG,YAAAA,EAFW,QAGX6B,YAAAA,EAAAA,SAHW,QAAA,QAAA;;ACmBd,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAvBD,IAAA,EAAA,QAAA,WASe,SAASc,EAAmBC,GAChC3C,OAAAA,KAESA,EAAAA,EAAAA,aAAAA,EAAO,GAAIA,EAAMiC,SAASW,MACtCC,QAAQC,IAAI,QAAS9C,GACrB6C,QAAQC,IAAI,QAAS9C,EAAM+C","file":"vuex-action-patcher.esm.map","sourceRoot":"../src","sourcesContent":["export default function isPromise (val) {\n    return val && typeof val.then === 'function'\n}\n","import isPromise from '../index'\n\nexport default function patchAction ({\n    store,\n    type,\n    handler,\n    local\n}) {\n    const entry = store._actions[type] || (store._actions[type] = [])\n\n    if (entry.length > 0) entry.pop()\n\n    entry.push(function wrappedActionHandler (payload, cb) {\n        let res = handler({\n            dispatch: local.dispatch,\n            commit: local.commit,\n            getters: local.getters,\n            state: local.state,\n            rootGetters: store.getters,\n            rootState: store.state,\n            apollo: store.$apollo,\n            gql: store.$gql\n        }, payload, cb)\n\n        if (!isPromise(res)) res = Promise.resolve(res)\n        if (store._devtoolHook) {\n            return res.catch(err => {\n                store._devtoolHook.emit('vuex:error', err)\n                throw err\n            })\n        } else {\n            return res\n        }\n    })\n}\n","import patchAction from '../index'\n\nexport default function patchModule ({\n    store,\n    path,\n    module,\n    hot\n}) {\n    const namespace = store._modules.getNamespace(path)\n    const local = module.context\n\n    module.forEachAction((action, key) => patchAction(store, (namespace + key), action, local))\n    module.forEachChild((child, key) => patchModule(store, path.concat(key), child, hot))\n}\n","import isPromise from './isPromise'\nimport patchAction from './patchAction'\nimport patchModule from './patchModule'\n\nexport default {\n    isPromise,\n    patchAction,\n    patchModule\n}\n","import {\n    patchModule\n} from './utils'\n\n/**\n * @name vuexActionPatcher\n * @desc Patch the main state and all registered submodules\n * @param tools An { object | array } of tools to be added to the Vuex context\n */\nexport default function vuexActionPatcher (tools) {\n    return store => {\n        // Patch the original store\n        patchModule(store, [], store._modules.root)\n        console.log('STORE', store)\n        console.log('proto', store.prototype)\n        // Augment the registerModule to add tools\n        // const orig = Vuex.Store.prototype.registerModule\n        // Vuex.Store.prototype.registerModule = function registerModule (path, rawModule) {\n        //     orig.call(this, path, rawModule)\n        //     patchModule(this, [].concat(path), this._modules.get([path]))\n        //     this.dispatch(`${path}/INIT`)\n        // }\n    }\n}\n"]}